#!/bin/bash
#
if [ $UID -ne 0 ]; then echo Please run this script as root.; exit 1; fi
#
nvme0="nvme0n1p"
nvme1="nvme1n1p"
label="sdb"
LFS=$LFS
#
nvme0n1=false
nvme1n1=false
sdb=false
rootFound=false
lfsFound=false
rootIsNvme0n1=false
rootIsNvme1n1=false
rootIsSDB=false
disk4=""
lfsRoot=""
lfsBoot=""
lfsHome=""
#
checkRootPart () {
# checks that the root partition, partToFind, is in the array of Partitions
# $1 is the array of partition - mountpoint pairs
# $2 is the root partition without /dev/ on the front
declare -a arrayParts=("${!1}")
partToFind=$2
local part
for part in ${arrayParts[@]}; do
  case $part in
     $partToFind)
       return 0 # found
     ;;
  esac
done
return 1 # not found
} # end checkRootPart
#
findLFS_Partitions () {
# checks if the LFS partitions /mnt/lfs, /mnt/lfs/boot and /mnt/lfs/home exists on this disk
# $1 is the array of partition - mountpoint pairs
echo "in function findLFS_partitions"
declare -a arrayLfsParts=("${!1}")
# the LFS partitions all begin with $LFS
for lfsPart in ${arrayLfsParts[@]}; do
# echo "lfsPart is $lfsPart"
  if [[ "$lfsPart" == "$LFS" ]]; then # lfs root
    lfsRoot=$lfsPart
  elif [[ "$lfsPart" == "${LFS}/boot" ]]; then # lfs boot
    lfsBoot=$lfsPart
  elif [[ "$lfsPart" == "${LFS}/home" ]]; then # lfs home
    lfsHome=$lfsPart
  fi
done
#echo "lfsRoot is $lfsRoot"
#echo "lfsBoot is $lfsBoot"
#echo "lfsHome is $lfsHome"
} # end findLFS_Partitions
#
if [ "$LFS" = "" ]; then
  echo "The LFS variable is not set"
  echo "Will set it to /mnt/lfs"
  export LFS="/mnt/lfs"
fi
if [ "$LFS" = /mnt/lfs ]; then
# determine which partitions are mounted
  nvme0Parts=($(lsblk --noheadings --raw -o NAME,MOUNTPOINT | awk '{if ($1~/nvme0n1p/ && $2~/[/]/) {print $1, $2}}'))
  numnvme0=${#nvme0Parts[@]}
#
  nvme1Parts=( $(lsblk --noheadings --raw -o NAME,MOUNTPOINT | awk '{if ($1~/nvme1n1p/ && $2~/[/]/) {print $1, $2}}') )
  numnvme1=${#nvme1Parts[@]}
#
  labelParts=( $(lsblk --noheadings --raw -o NAME,MOUNTPOINT | awk '{if ($1~/sdb/ && $2~/[/]/) {print $1, $2}}') )
  numsdb=${#labelParts[@]}
#
  if [ $numnvme0 -gt 0 ]; then
    echo "disk nvme0n1 is mounted"
    echo "these partitions are mounted"
    echo "${nvme0Parts[@]}"
    nvme0n1=true
    if [ -z "$lfsRoot" ]; then findLFS_Partitions nvme0Parts[@]; fi
  fi
  if [ $numnvme1 -gt 0 ]; then
    echo "disk nvme1n1 is mounted"
    echo "these partitions are mounted"
    echo "${nvme1Parts[@]}"
    nvme1n1=true
    if [ -z "$lfsRoot" ]; then findLFS_Partitions nvme1Parts[@]; fi
  fi
  if [ $numsdb -gt 0 ]; then
    echo "disk sdb is mounted"
    echo "these partitions are mounted"
    echo "${labelParts[@]}"
    sdb=true
    if [ -z "$lfsRoot" ]; then findLFS_Partitions labelParts[@]; fi
  fi
#
# get the root partition to identify the host
  rootSystem=$(findmnt -n -o SOURCE /)
  echo "root partition is $rootSystem"
  rootNoDev=${rootSystem/\/dev\//}
#  echo "rootNoDev is $rootNoDev"
#
# get the LFS partition to identify the partitions to unmount
  LFSSystem=$(findmnt -n -o SOURCE $LFS)
  echo "LFS root system is $LFSSystem"
  LFSNoDev=${LFSSystem/\/dev\//}
#  echo "LFSNoDev is $LFSNoDev"
#
# find the disk on which the root partition is mounted
  if $nvme0n1; then # mounted - test if root partition exists on this disk
    echo "Check if the root partition is on disk nvme0n1"
    checkRootPart nvme0Parts[@] $rootNoDev
    if [ "$?" = 0 ]; then
      echo "root partition found on the mounted disk ${nvme0/p/} - ** this is the host **"
      rootFound=true
      rootIsNvme0n1=true
    else
      echo "root partition is not on disk ${nvme0/p/}"
    fi
  fi
  if ! $rootFound; then # look on nvme1n1
    if $nvme1n1; then # mounted - test if root partition exists on this disk
      echo "Check if the root partition is on disk nvme1n1"
      checkRootPart nvme1Parts[@] $rootNoDev
      if [ "$?" = 0 ]; then
        echo "root partition found on the mounted disk ${nvme1/p/} - ** this is the host **"
        rootFound=true
	rootIsNvme1n1=true
      else
        echo "root partition is not on disk ${nvme1/p/}"
      fi
    fi
  fi
  if ! $rootFound; then # look on disk sdb
    if $sdb; then # mounted - test if root partition exists on this disk
      echo "Check if the root partition is on disk sdb"
      checkRootPart labelParts[@] $rootNoDev
      if [ "$?" = 0 ]; then
        echo "root partition found on the mounted disk $label - ** this is the host **"
        rootFound=true
	rootIsSDB=true
      else
        echo "root partition is not on disk $label"
      fi
    fi
  fi
  if ! $rootFound; then
    echo "can't find the root partition - check the labels used in this script"
    echo "Aborting"
    exit 1
  fi
#
  if [ "$lfsRoot" = "$LFS" ]; then # found LFS so umount the LFS partitions
# Unmount the LFS file system
    echo "will umount the LFS partitions"
    echo "$lfsRoot $lfsBoot $lfsHome"
    umount -v -R $LFS
  else
    echo "lfsRoot is NULL"
    echo "Can't umount the LFS partitions"
  fi
else
  echo "Don't recognise $LFS. Edit this script."
  echo "exit"
  exit 1
fi
